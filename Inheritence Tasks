//Q1
package interfacetasks.com;
 
class Account {
 
 protected String accountNumber;
 protected double balance;
 
 public Account(String accountNumber, double balance) {
     this.accountNumber = accountNumber;
     this.balance = balance;
 }
 
 public void deposit(double amount) {
     if (amount > 0) {
         balance += amount;
         System.out.println("Deposited: $" + amount);
     } else {
         System.out.println("Deposit amount must be positive.");
     }
 }

  
 public void withdraw(double amount) {
     if (amount > 0 && amount <= balance) {
         balance -= amount;
         System.out.println("Withdrawn: $" + amount);
     } else {
         System.out.println("Insufficient funds or invalid amount.");
     }
 }
 
 public void displayBalance() {
     System.out.println("Account Number: " + accountNumber + ", Balance: $" + balance);
 }
}
 
class SavingsAccount extends Account {
 
 private double interestRate;
 
 public SavingsAccount(String accountNumber, double balance, double interestRate) {
     super(accountNumber, balance);
     this.interestRate = interestRate;
 }
 
 public void addInterest() {
     double interest = balance * interestRate / 100;
     balance += interest;
     System.out.println("Interest added: $" + interest);
 }
}
 
class CheckingAccount extends Account {
 
 private double overdraftLimit;

 
 public CheckingAccount(String accountNumber, double balance, double overdraftLimit) {
     super(accountNumber, balance);
     this.overdraftLimit = overdraftLimit;
 }
 
 @Override
 public void withdraw(double amount) {
     if (amount > 0 && amount <= (balance + overdraftLimit)) {
         balance -= amount;
         System.out.println("Withdrawn: $" + amount);
     } else {
         System.out.println("Overdraft limit exceeded or invalid amount.");
     }
 }
}

 
public class Inheriex1 {
public static void main(String[] args) {
	  SavingsAccount savingsAccount = new SavingsAccount("SA12345", 1000.00, 5.0);
	     System.out.println("Savings Account:");
	     savingsAccount.deposit(500.00);
	     savingsAccount.addInterest();
	     savingsAccount.withdraw(200.00);
	     savingsAccount.displayBalance();
 
	     CheckingAccount checkingAccount = new CheckingAccount("CA54321", 500.00, 300.00);
	     System.out.println("\nChecking Account:");
	     checkingAccount.deposit(200.00);
	     checkingAccount.withdraw(800.00);   
	     checkingAccount.withdraw(100.00);   
	     checkingAccount.displayBalance();
}
}

