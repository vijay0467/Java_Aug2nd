//Q1
package interfacetasks.com;
 
class Account {
 
 protected String accountNumber;
 protected double balance;
 
 public Account(String accountNumber, double balance) {
     this.accountNumber = accountNumber;
     this.balance = balance;
 }
 
 public void deposit(double amount) {
     if (amount > 0) {
         balance += amount;
         System.out.println("Deposited: $" + amount);
     } else {
         System.out.println("Deposit amount must be positive.");
     }
 }

  
 public void withdraw(double amount) {
     if (amount > 0 && amount <= balance) {
         balance -= amount;
         System.out.println("Withdrawn: $" + amount);
     } else {
         System.out.println("Insufficient funds or invalid amount.");
     }
 }
 
 public void displayBalance() {
     System.out.println("Account Number: " + accountNumber + ", Balance: $" + balance);
 }
}
 
class SavingsAccount extends Account {
 
 private double interestRate;
 
 public SavingsAccount(String accountNumber, double balance, double interestRate) {
     super(accountNumber, balance);
     this.interestRate = interestRate;
 }
 
 public void addInterest() {
     double interest = balance * interestRate / 100;
     balance += interest;
     System.out.println("Interest added: $" + interest);
 }
}
 
class CheckingAccount extends Account {
 
 private double overdraftLimit;

 
 public CheckingAccount(String accountNumber, double balance, double overdraftLimit) {
     super(accountNumber, balance);
     this.overdraftLimit = overdraftLimit;
 }
 
 @Override
 public void withdraw(double amount) {
     if (amount > 0 && amount <= (balance + overdraftLimit)) {
         balance -= amount;
         System.out.println("Withdrawn: $" + amount);
     } else {
         System.out.println("Overdraft limit exceeded or invalid amount.");
     }
 }
}

 
public class Inheriex1 {
public static void main(String[] args) {
	  SavingsAccount savingsAccount = new SavingsAccount("SA12345", 1000.00, 5.0);
	     System.out.println("Savings Account:");
	     savingsAccount.deposit(500.00);
	     savingsAccount.addInterest();
	     savingsAccount.withdraw(200.00);
	     savingsAccount.displayBalance();
 
	     CheckingAccount checkingAccount = new CheckingAccount("CA54321", 500.00, 300.00);
	     System.out.println("\nChecking Account:");
	     checkingAccount.deposit(200.00);
	     checkingAccount.withdraw(800.00);   
	     checkingAccount.withdraw(100.00);   
	     checkingAccount.displayBalance();
}
}


//Q2

package interfacetasks.com;
abstract class Shape{
	public abstract void getArea();
	public abstract void getPerimeter();
}
class Circle extends Shape{
	double radius;
    public Circle(double radius) {
    	this.radius=radius;
    }
	@Override
	public void getArea() {
		 System.out.println("area of circcle: "+(Math.PI*radius*radius));
		
	}

	@Override
	public void getPerimeter() {
	  System.out.println("perimeter of circle: "+(2*Math.PI*radius));
		
	}
	 
}
class Rectangle extends Shape{
	double length;
	double width;
	public Rectangle(double length,double width) {
		this.length=length;
		this.width=width;
	}
	@Override
	public void getArea() {
		 System.out.println("area of rectangle: "+(length*width));
		
	}
	@Override
	public void getPerimeter() {
		 System.out.println("perimeter of rectangle: "+(2*(length+width)));
		
	}
	
}

public class Inheriex2 {
public static void main(String[] args) {
	Circle c=new Circle(4);
	Rectangle r=new Rectangle(6, 7);
	c.getArea();
	c.getPerimeter();
	r.getArea();
	r.getPerimeter();
	
}
}


//Q3

package interfacetasks.com;
class Employee{
	String empName;
	int empId;
	int salary;
	public Employee(String empName,int empId,int salary) {
		this.empName=empName;
		this.empId=empId;
		this.salary=salary;
		
	}
	public void displayDetails() {
		System.out.println("employee name: "+this.empName);
		System.out.println("employee Id: "+this.empId);
		System.out.println("employee salary: "+this.salary);
	}
}
class Manager extends Employee{
	String department;
	public Manager(String empName, int empId, int salary,String department) {
		super(empName, empId, salary);
		this.department=department;
	}
	public void displayDetails() {
		super.displayDetails();
		System.out.println("Manager department: "+this.department);
	}
}
class Developer extends Employee{
    String proglang;
	public Developer(String empName, int empId, int salary,String proglang) {
		super(empName, empId, salary);
		this.proglang=proglang;
	}
	public void displayDetails() {
		super.displayDetails();
		System.out.println("developer programming language: "+this.proglang);
	}
	
}
public class Inheriex3 {
public static void main(String[] args) {
	Manager m=new Manager("ramesh", 234, 200000, "Accounts");
	Developer d=new Developer("vijay", 300, 30000, "Java");
	m.displayDetails();
	d.displayDetails();
}
}

//Q4

package interfacetasks.com;

class Book {
    String title;
    String author;
    int year;

 
    Book(String title, String author, int year) {
        this.title = title;
        this.author = author;
        this.year = year;
    }
 
    void displayInfo() {
        System.out.println("Title: " + title);
        System.out.println("Author: " + author);
        System.out.println("Year: " + year);
    }
}
 
class Fiction extends Book {
    String genre;

 
    Fiction(String title, String author, int year, String genre) {
        super(title, author, year);
        this.genre = genre;
    }

 
    void read() {
        System.out.println("Enjoy reading this fiction book.");
    }
}
 
class NonFiction extends Book {
    String topic; 
    NonFiction(String title, String author, int year, String topic) {
        super(title, author, year);
        this.topic = topic;
    }
 
    void study() {
        System.out.println("Use this non-fiction book for studying.");
    }
}
public class Inheritex4 {
public static void main(String[] args) {
	Fiction f=new Fiction("fairy", "ramesh", 2020,"science fiction" );
	NonFiction nf=new NonFiction("Alice Copperfield", "Lewis Carrol", 2000, "Thriller");
    System.out.println("Fiction Book:");
	f.displayInfo();
	System.out.println("Genre: " + f.genre);
    f.read();
    System.out.println("\nNon-Fiction Book:");
    nf.displayInfo();
    System.out.println("Topic: " + nf.topic);
    nf.study();
	
}
}

