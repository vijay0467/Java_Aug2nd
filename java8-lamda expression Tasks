//Exercise 1:

package Java8features;

import java.util.function.BiFunction;

public class Java8FeaturesAssign {
public static void main(String[] args) {
	BiFunction<Integer,Integer,Integer>sum=(a,b)->a+b;
	System.out.println(sum.apply(4, 5));
	
}
}
 

package Java8features;

import java.util.function.Function;

public class Java8FeaturesAssign {
public static void main(String[] args) {
	Function<String,Integer>strlen=(s)->s.length();
	System.out.println(strlen.apply("Hello,world!"));
	
}
}

//Exercise 2:

package Java8features;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Java8FeaturesAssign {
public static void main(String[] args) {
	ArrayList<Integer>al=new ArrayList<>();
	al.add(30);
	al.add(23);
	al.add(56);
	al.add(87);
	al.add(65);
	al.add(54);
	al.add(98);
	al.add(29);
	List<Integer>evenNums=al.stream().filter(i->i%2==0).collect(Collectors.toList());
	System.out.println("even nums: "+evenNums);
}
}

//Exercise 3:
package Java8features;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Java8FeaturesAssign {
public static void main(String[] args) {
	ArrayList<Integer>al=new ArrayList<>();
	al.add(30);
	al.add(23);
	al.add(56);
	al.add(87);
	al.add(65);
	al.add(54);
	al.add(98);
	al.add(29);
    List<Integer>doublenums=al.stream().map(i->i*2).collect(Collectors.toList());
    System.out.println(doublenums);
}
}

//Exercise 4:

package Java8features;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Java8FeaturesAssign {
	 private int age;
	 private String name;
	 
 

public Java8FeaturesAssign(int age, String name) {
		super();
		this.age = age;
		this.name = name;
	}



public int getAge() {
	return age;
}



public void setAge(int age) {
	this.age = age;
}



public String getName() {
	return name;
}



public void setName(String name) {
	this.name = name;
}



public static void main(String[] args) {
	ArrayList<Java8FeaturesAssign>al=new ArrayList<>();
	al.add(new Java8FeaturesAssign(45, "vijay"));
	al.add(new Java8FeaturesAssign(56, "ajay"));
	al.add(new Java8FeaturesAssign(72, "danunjay"));
	al.add(new Java8FeaturesAssign(80, "sanjay"));
	al.add(new Java8FeaturesAssign(91, "ranvijay"));
	 
    List<String>filetring=al.stream().filter(i->i.getAge()>50).map(Java8FeaturesAssign::getName).collect(Collectors.toList());
    System.out.println(filetring);
}
}

//Exercise 5:

package Java8features;

@FunctionalInterface
interface MathOperation {
    double operate(double a, double b);
public static void main(String[] args) {
MathOperation addition = (a, b) -> a + b;
MathOperation subtraction = (a, b) -> a - b;
MathOperation multiplication = (a, b) -> a * b;
MathOperation division = (a, b) -> a / b;
System.out.println(addition.operate(34, 56));
System.out.println(subtraction.operate(34, 56));
System.out.println(multiplication.operate(34, 56));
System.out.println(division.operate(34, 56));
}
}



